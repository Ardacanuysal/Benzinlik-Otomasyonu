<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQnSURBVGhD7ZpbqA5RFMePu1yPKCl1XKIQby5PTihS0onwgBShkPMgHtxTbkWSSymUJJIH5VZC
        IlEunRJ5IBG5PHBC5O7/r7U1TTOz9+yZPd/sr2/Xan/zzdqX315r9r2urrjQAUVthLyE/M1B/iCPZ5B1
        kPbFYZiV1AZqF3KAjGuoo2bVKE5rjkNY1QiNrnA6IeMGCK1mGo4UALzNtDJp9OZD+YNU/jni7oaJTxcA
        vN+wLkZqtOb2UKVfB4DZacyF7IEcihB2LlHf32X8PxQyyFCGQ+9eTF7X8X9/IxqNUme8PxUq5BGeB0i6
        wYhbLC3IxkkT2PBnE8r6hndNaTIM6/bBH7dCBVzDcy9RHIf4vSWssvgrpKcHmMgbg7K+QKefDXQPJKIl
        g654DM8dJbOZiL8aVCCPMTdtHittgFcEYDjIb4aonnkVfv8uKSwbZ68N8C4B+o54gWTQDvGBEoMqT7Dq
        sccA7ApkgsB2Q3zOA1hCWwEHvYKdQNxwkPb7KkI/E/AQwL7wxLKZXJoW5oQi3FMXYaGsZVhbeJLGsj/w
        vgmyGsKePGtFdekPo4zxEI7dSbrWwEs1GX/E+67ysS9xDM3RgcMi5Y4r4OUGVrsKnS4CzZ59lgOZHICl
        9XSeYG1hE2AWfinYpTv8HV7AxIE7B2bBXCczcIbG5WBeshN5tZW8TTvQQoC5qmLg5F3ncmnfcwnJ8Ngw
        70KBuURLC6TTH1YDdjQsmXZatJBy6ZqFc3DxmktrGrFUnRanoJyscOZ0EfLLwAO8tTDn3lOlx1URZ2et
        GmhvgdWRSG8ALoKobdU11QhM11WWOimADxBzMcANQy5E4sZjLy3MUz4Gbrr/DMBNkf9nI45bYnoHzL1s
        zoe5oXAzZEnuR9cL9O4YK3sFTKvxdIKBB15RbntG3nNt/SlCxyvguwLTgDhpCJooeuFjHTaQV8DHBWRe
        jHWVxbeI3ibfLayAdYfi66sF+ImA9EWcdBY1WvTO+25huqyCaY5x64OBRonaQPDqGybwbYg6dZyB3zcg
        byH3Icsg6pDuREyDeAdMaJ5LqS1dMej/iGP0voROzUtgQtOq3LQfC+F8eiBkMUS3V+UtsG7vqqrm0raw
        3k08soCqtDWX1szaSrXFY2PxmoXLZOGoqaGNVVUaTk15v4RBN3ypNM5dmgfU6sArPKnI89n0CrJTYN7E
        G5knVUJevAFocrnGGTDvcI2SCo5ArLuKYOvan5H3NCmH1yF15TgDbkXhPcXC7zQdiS2sSsfGnQ7h5biW
        SnZahGZlsgKZpOd1R3VfO0nfmYVNKlkJHWtg3T5UJWBMytxq24nyKITnQSaFlEmn0RaY6TZ4Bsxdk8xh
        hyfQvD6lbhNlguaeEy9dl8ltw3XhlDYX2GBLLcTDQ0jwMKySjcBh6ilkLYTnVtrwDyFkzhMEH3eRAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>